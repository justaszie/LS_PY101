1. a function that returns the sum of two numbers
# Given 2 numbers 
Calculate result value = number1 + number 2
Return the result 

2. a function that takes a list of strings, and returns a string that is all those strings concatenated together
# given a list of strings

iterate over the list 
    if the result string is not defined yet
        set the result string value to the value of the first string in the list
    else
        add the value of current string to the end of the result string 
    continue to next iteration 

if the result string is defined:
    return the result string
else
    return null value 


3. a function that takes a list of integers, and returns a new list with every other element from the original list, starting with the first element. For instance:
every_other([1,4,7,2,5]) # => [1,7,5]

# given a list of integers
set the result list to an empty list 

iterate over the list starting from first element (position n)
    add the current element to the result list
    
    continue with the next iteration - element at the position n + 2

return the result list 


4. a function that determines the index of the 3rd occurrence of a given character in a string. For instance, if the given character is 'x' and the string is 'axbxcdxex', the function should return 6 (the index of the 3rd 'x'). If the given character does not occur at least 3 times, return None.
# given a string and a searched character

set the count of the character occurences to 0

iterate over each character in the string:
    if the current character is the searched character:
        increase the count of the character occurences by 1
    else
        do nothing
    
    if the count of the occurences is 3:
        stop the function and return the position of the current character in the string
    else:
        continue with the next iteration

if the function is still runing, return None

5. a function that takes two lists of numbers and returns the result of merging the lists. The elements of the first list should become the elements at the even indexes of the returned list, while the elements of the second list should become the elements at the odd indexes. For instance:
merge([1, 2, 3], [4, 5, 6]) # => [1, 4, 2, 5, 3, 6]
You may assume that both list arguments have the same number of elements.

# given list 1 and list 2 
set result lists to an empty list 

iterate over a list of numbers from 1 up to, including the length of the lists
    add the element at the position of the current number from list 1 to the result list
    add the element at the position of the current number from list 2 to the result list

return the result list 